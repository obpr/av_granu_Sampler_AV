#N canvas 652 283 574 473 10;
#X obj 2 275 cnv 3 550 3 empty empty inlets 8 12 0 13 -228856 -1 0
;
#X obj 2 336 cnv 3 550 3 empty empty outlets 8 12 0 13 -228856 -1 0
;
#X obj 2 371 cnv 3 550 3 empty empty arguments 8 12 0 13 -228856 -1
0;
#X obj 80 282 cnv 17 3 17 empty empty 0 5 9 0 16 -228856 -162280 0
;
#X obj 80 345 cnv 17 3 17 empty empty 0 5 9 0 16 -228856 -162280 0
;
#X obj 70 236 print;
#X obj 311 240 print;
#X obj 3 478 cnv 1 550 1 empty empty empty 0 0 0 4 -262144 -262144
0;
#X obj 2 446 cnv 15 552 21 empty empty empty 20 12 0 14 -233017 -33289
0;
#X text 177 381 -;
#X obj 2 5 cnv 15 553 42 empty empty empty 20 12 0 14 -233017 -66577
0;
#N canvas 0 22 450 278 (subpatch) 0;
#X coords 0 1 100 -1 554 42 1 0 0;
#X restore 2 4 graph;
#X obj 305 5 cnv 15 250 40 empty empty empty 12 13 0 18 -128992 -233080
0;
#N canvas 382 141 749 319 (subpatch) 0;
#X coords 0 -1 1 1 252 42 2 100 100;
#X restore 304 4 pd;
#X text 120 345 anything;
#X text 177 345 - the formatted message;
#X obj 40 171 bng 15 250 50 0 empty empty empty 17 7 0 10 -228856 -1
-1;
#X text 144 283 bang;
#X obj 17 58 cyclone/comment 0 18 times ? 0 0 0 0 Message formatter
;
#X obj 16 5 cyclone/comment 0 37 times ? 0 0 0 0 sprintf;
#X obj 322 29 cyclone/comment 0 13 courier ? 0 224 228 220 Objects
cloned from Max/MSP;
#X obj 363 5 cyclone/comment 0 24 courier ? 0 224 228 220 cyclone;
#X text 120 304 anything;
#X text 177 303 -;
#X text 99 410 2) anything;
#X text 99 381 1) symbol;
#X text 177 410 -;
#X text 190 303 float/symbol atoms to format a string - messages with
more than one item sends each item to a separate inlet;
#X text 189 381 the optional 'symout' argument formats a symbol message
('symout' itself not included);
#X msg 217 174 wind;
#X msg 70 170 wood;
#X obj 280 173 bng 15 250 50 0 empty empty empty 17 7 0 10 -228856
-1 -1;
#X msg 311 172 64 64;
#X obj 311 204 cyclone/sprintf char number %d is '%c';
#X msg 375 175 \$1 \$1;
#X obj 70 200 cyclone/sprintf %s-%s.wav;
#X obj 375 148 nbx 3 14 -1e+37 1e+37 0 0 empty empty empty 0 -8 0 10
-228856 -1 -1 0 256;
#X text 177 283 - formats the message with current input;
#X obj 80 302 cnv 17 3 29 empty empty 0-n 5 9 0 16 -228856 -162280
0;
#X text 189 410 format output message with changeable arguments '%'
(each changeable argument creates a corresponding inlet);
#X text 74 87 Based on C's "printf" function \, [sprintf] formats messages
set in the arguments \, where each changeable argument '%' corresponds
to an inlet (some options inlcude: %s - symbol \, %d - int \, %f -
float \, and %c - ASCII character).;
#N canvas 520 100 1034 764 details 0;
#X obj 77 319 print;
#X obj 77 280 cyclone/sprintf %.2fdB;
#X text 74 228 float example;
#X obj 77 250 nbx 5 14 -1e+37 1e+37 0 0 empty empty empty 0 -8 0 10
-228856 -1 -1 0 256;
#X msg 245 240 10.6;
#X msg 566 83 87 65 82;
#X obj 566 109 cyclone/sprintf %c%c%c: What is it good for?, f 46
;
#X obj 91 514 print;
#X msg 91 443 error;
#X obj 270 472 cyclone/sprintf it's %s;
#X msg 270 436 OK!;
#X symbolatom 190 675 10 0 0 0 - - -;
#X msg 190 619 a;
#X obj 190 649 cyclone/sprintf symout %s symbol, f 34;
#X obj 245 278 cyclone/sprintf a-%d;
#X obj 270 512 print;
#X obj 245 316 print;
#X obj 190 704 print;
#X obj 566 148 print;
#X text 52 30 The arguments in [sprintf] format a message to be sent
out and can be floats \, symbols or changeable arguments (like %ld
or %f \, resembling the C programming language). The number of changeable
arguments determines the number of inlets \, with each inlet corresponding
to a changeable argument \, in order.;
#X text 58 197 Examples with float:;
#X text 281 238 (converted to int);
#X obj 91 475 cyclone/sprintf %d;
#X text 52 366 A symbol may be received in any inlet that corresponds
to a %s argument. If sent to another inlet type \, a conversion error
is given in Pd's window.;
#X text 54 576 The optional 'symout' argument turns the whole output
into a symbol message.;
#X text 526 46 a list input spreads the values to the inlets;
#X text 53 115 If a changeable number argument argument (such as %d
or %f) does not receive an input \, the value is "0" by default. If
no value has been received for a changeable symbol argument (%s or
%c) \, a blank space is the default.;
#X text 527 305 %c;
#X text 614 305 character;
#X text 527 325 %d or %i;
#X text 527 465 %e;
#X text 527 485 %E;
#X text 527 552 %o;
#X text 527 572 %s;
#X text 527 592 %u;
#X text 614 592 unsigned integer;
#X text 527 612 %x;
#X text 614 612 unsigned hexadecimal in lowercase;
#X text 527 632 %X;
#X text 614 632 unsigned hexadecimal in CAPS;
#X text 527 652 %p;
#X text 614 652 unsigned hexadecimal in lowercase preceded by "0x"
;
#X text 614 552 unsigned octal;
#X text 614 572 string;
#X text 527 283 %%;
#X text 614 283 literal %;
#X text 614 325 signed decimal integer (32 bits);
#X text 614 465 32 bits float with scientific notation using "e" character
;
#X text 614 485 32 bits float with scientific notation using "e" character
;
#X text 614 427 32 bits float decimal floating point (no scientific
notation), f 63;
#X text 527 509 %g;
#X text 614 509 32 bits float (shorter of %e or %f);
#X text 527 529 %g;
#X text 614 529 32 bits float (shorter of %E or %f);
#X text 527 345 %hi;
#X text 614 345 signed short decimal integer (16 bits);
#X text 527 365 %hu;
#X text 614 365 unsigned short decimal integer (16 bits);
#X text 527 386 %li;
#X text 527 406 %lu;
#X text 614 386 signed long decimal integer (64 bits);
#X text 614 406 unsigned long decimal integer (64 bits);
#X text 527 447 %lf or %lF;
#X text 527 427 %f or %F;
#X text 614 447 64 bits float decimal floating point (no scientific
notation), f 63;
#X text 497 236 All possible patterns for more details on each \, refer
to a standard C library manual.:;
#X connect 1 0 0 0;
#X connect 3 0 1 0;
#X connect 4 0 14 0;
#X connect 5 0 6 0;
#X connect 6 0 18 0;
#X connect 8 0 22 0;
#X connect 9 0 15 0;
#X connect 10 0 9 0;
#X connect 11 0 17 0;
#X connect 12 0 13 0;
#X connect 13 0 11 0;
#X connect 14 0 16 0;
#X connect 22 0 7 0;
#X restore 472 242 pd details;
#X connect 16 0 35 0;
#X connect 29 0 35 1;
#X connect 30 0 35 0;
#X connect 31 0 33 0;
#X connect 32 0 33 0;
#X connect 33 0 6 0;
#X connect 34 0 33 0;
#X connect 35 0 5 0;
#X connect 36 0 34 0;

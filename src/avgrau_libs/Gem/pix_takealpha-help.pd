#N canvas 6 273 640 398 10;
#X declare -lib Gem;
#X text 452 8 GEM object;
#X obj 8 226 cnv 15 430 120 empty empty empty 20 12 0 14 -233017 -66577
0;
#X text 30 233 Inlets:;
#X text 30 289 Outlets:;
#X obj 8 186 cnv 15 430 30 empty empty empty 20 12 0 14 -195568 -66577
0;
#X text 17 185 Arguments:;
#X obj 8 66 cnv 15 430 110 empty empty empty 20 12 0 14 -233017 -66577
0;
#X obj 449 66 cnv 15 170 280 empty empty empty 20 12 0 14 -228992 -66577
0;
#X text 453 49 Example:;
#X obj 514 279 cnv 15 100 60 empty empty empty 20 12 0 14 -195568 -66577
0;
#N canvas 0 22 450 300 gemwin 0;
#X obj 132 136 gemwin;
#X obj 67 89 outlet;
#X obj 67 10 inlet;
#X obj 67 41 route create;
#X msg 67 70 set destroy;
#X msg 142 68 set create;
#X msg 198 112 destroy \, reset;
#X msg 132 93 create \, 1 \, color 0.5 0.5 0.5;
#X connect 2 0 3 0;
#X connect 3 0 4 0;
#X connect 3 0 7 0;
#X connect 3 1 5 0;
#X connect 3 1 6 0;
#X connect 4 0 1 0;
#X connect 5 0 1 0;
#X connect 6 0 0 0;
#X connect 7 0 0 0;
#X restore 519 318 pd gemwin;
#X msg 519 299 create;
#X text 515 278 Create window:;
#X obj 451 187 cnv 15 160 40 empty empty empty 20 12 0 14 -24198 -66577
0;
#X obj 451 118 gemhead;
#X obj 496 101 bng 15 250 50 0 empty empty pix_load -45 8 0 8 -262144
-1 -1;
#N canvas 0 22 587 366 image 0;
#X obj 77 48 inlet;
#X obj 77 344 outlet;
#X obj 77 205 pix_image examples/data/fractal.JPG;
#X obj 223 55 inlet;
#X msg 223 123 open \$1;
#X obj 223 100 openpanel;
#X connect 0 0 2 0;
#X connect 2 0 1 0;
#X connect 3 0 5 0;
#X connect 4 0 2 0;
#X connect 5 0 4 0;
#X restore 451 137 pd image;
#X obj 451 252 pix_texture;
#X text 63 196 <none>;
#X text 38 303 Outlet 1: gemlist;
#X text 44 247 Inlet 1: gemlist;
#X obj 451 274 square 3;
#X text 503 77 (JPEG \, TIFF \, ..);
#X obj 519 121 gemhead;
#N canvas 0 22 587 366 image 0;
#X obj 77 48 inlet;
#X obj 77 344 outlet;
#X obj 77 205 pix_image examples/data/dancer.JPG;
#X obj 223 55 inlet;
#X msg 223 123 open \$1;
#X obj 223 100 openpanel;
#X connect 0 0 2 0;
#X connect 2 0 1 0;
#X connect 3 0 5 0;
#X connect 4 0 2 0;
#X connect 5 0 4 0;
#X restore 519 140 pd image;
#X obj 564 102 bng 15 250 50 0 empty empty pix_load -45 8 0 8 -262144
-1 -1;
#X text 44 276 Inlet 2: gemlist;
#X text 449 66 open two different images;
#X text 71 31 Class: pix mix object;
#X text 29 158 The 2 images have to be of the same size.;
#X obj 451 197 pix_takealpha;
#X obj 519 161 pix_coloralpha;
#X obj 451 232 alpha;
#X text 29 67 Description: transfer the alpha-channel;
#X text 29 84 [pix_takealpha] takes the alpha-channel of the 2nd image
and applies it on the 1st image.;
#X text 28 117 The 1st image has the be in RGBA-colorspace;
#X text 27 130 If the 2nd image is in non-RGBA colorspace \, the luminance
value is taken instead of the Alpha-value.;
#X text 50 12 Synopsis: [pix_takealpha];
#X text 31 356 see also:;
#X obj 96 358 pix_mask;
#X obj 518 8 declare -lib Gem;
#X connect 10 0 11 0;
#X connect 11 0 10 0;
#X connect 14 0 16 0;
#X connect 15 0 16 1;
#X connect 16 0 30 0;
#X connect 17 0 21 0;
#X connect 23 0 24 0;
#X connect 24 0 31 0;
#X connect 25 0 24 1;
#X connect 30 0 32 0;
#X connect 31 0 30 1;
#X connect 32 0 17 0;

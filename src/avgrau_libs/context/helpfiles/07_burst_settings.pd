#N canvas 67 87 1299 681 8;
#X declare -lib zexy -path zexy;
#X declare -path ../;
#X obj 0 -6 cnv 15 1500 800 empty empty empty 20 12 0 14 -70489 -66577
0;
#X obj 9 6 cnv 15 1030 85 empty empty empty 20 12 0 14 -128992 -66577
0;
#X obj 11 8 cnv 15 357 60 empty empty empty 20 12 0 14 -33289 -66577
0;
#X obj 9 91 cnv 15 1268 471 empty empty empty 20 12 0 14 -1 -66577
0;
#X obj 645 93 cnv 15 630 467 empty empty SELECTION (given how many‚ which toggles)
20 12 0 20 -214889 -1 0;
#X obj 11 93 cnv 15 630 467 empty empty QUANTITY (how many toggles will fire)
20 12 0 20 -72925 -1 0;
#X obj 705 468 tgl 15 0 empty empty WRAP 0 -8 0 14 -262144 -1 -1 0
1;
#X msg 69 171 \; burst-test :h \$1;
#X msg 69 281 \; burst-test :p \$1;
#X msg 69 391 \; burst-test :l \$1;
#X msg 700 282 \; burst-test :P \$1;
#X msg 700 391 \; burst-test :R \$1;
#X msg 705 490 \; burst-test :W \$1;
#N canvas 67 97 450 300 define 0;
#X symbolatom 100 100 20 0 0 2 DEFINE SERIES - -, f 20;
#X obj 100 150 s2l;
#X obj 100 172 list prepend :o;
#X obj 100 194 list trim;
#X obj 100 216 outlet;
#X connect 0 0 1 0;
#X connect 1 0 2 0;
#X connect 2 0 3 0;
#X connect 3 0 4 0;
#X coords 0 -1 1 1 102 14 2 100 100;
#X restore 701 136 pd define;
#X obj 701 155 s burst-test;
#X obj 72 136 hsl 97 15 0 15 0 0 empty empty HOW_MANY -2 -8 0 14 -262144
-1 -1 0 1;
#X obj 72 246 hsl 97 15 -1 15 0 0 empty empty PROGRESSION -2 -8 0 14
-262144 -1 -1 0 1;
#X obj 72 356 hsl 97 15 0 101 0 0 empty empty RANDOMIZE -2 -8 0 14
-262144 -1 -1 0 1;
#X obj 703 356 hsl 97 15 0 101 0 0 empty empty RANDOMIZE -2 -8 0 14
-262144 -1 -1 0 1;
#X obj 703 246 hsl 97 15 -1 15 0 0 empty empty PROGRESSION -2 -8 0
14 -262144 -1 -1 0 1;
#X obj 69 468 tgl 15 0 empty empty WRAP 0 -8 0 14 -262144 -1 -1 0 1
;
#X msg 69 490 \; burst-test :w \$1;
#N canvas 67 89 348 300 int 0;
#X obj 100 56 inlet;
#X obj 100 78 int;
#X floatatom 100 100 5 0 0 0 - - -, f 5;
#X obj 100 119 outlet;
#X connect 0 0 1 0;
#X connect 1 0 2 0;
#X connect 2 0 3 0;
#X coords 0 -1 1 1 27 14 2 100 100;
#X restore 69 154 pd int;
#X obj 15 136 cnv 15 43 38 empty empty empty 20 12 0 14 -66577 -66577
0;
#X obj 17 138 cnv 15 39 34 empty empty :h -3 16 0 30 -233017 -66577
0;
#X obj 15 246 cnv 15 43 38 empty empty empty 20 12 0 14 -66577 -66577
0;
#X obj 17 248 cnv 15 39 34 empty empty :p -3 16 0 30 -233017 -66577
0;
#X obj 15 356 cnv 15 43 38 empty empty empty 20 12 0 14 -66577 -66577
0;
#X obj 17 358 cnv 15 39 34 empty empty :l -3 16 0 30 -233017 -66577
0;
#X obj 15 466 cnv 15 43 38 empty empty empty 20 12 0 14 -66577 -66577
0;
#X obj 17 468 cnv 15 39 34 empty empty :w -3 16 0 30 -233017 -66577
0;
#X obj 650 136 cnv 15 43 38 empty empty empty 20 12 0 14 -66577 -66577
0;
#X obj 652 138 cnv 15 39 34 empty empty :o -3 16 0 30 -233017 -66577
0;
#X obj 650 246 cnv 15 43 38 empty empty empty 20 12 0 14 -66577 -66577
0;
#X obj 652 248 cnv 15 39 34 empty empty :P -3 16 0 30 -233017 -66577
0;
#X obj 650 356 cnv 15 43 38 empty empty empty 20 12 0 14 -66577 -66577
0;
#X obj 652 358 cnv 15 39 34 empty empty :R -3 16 0 30 -233017 -66577
0;
#X obj 650 466 cnv 15 43 38 empty empty empty 20 12 0 14 -66577 -66577
0;
#X obj 652 468 cnv 15 39 34 empty empty :W -3 16 0 30 -233017 -66577
0;
#X obj 10 216 cnv 1 1266 1 empty empty empty 20 12 0 14 -1 -66577 0
;
#X obj 13 10 cnv 15 353 56 empty empty BURST SETTINGS 25 27 0 35 -2681
-1 0;
#X text 179 131 :h determines exactly how many toggles will fire in
the next cycle. It forces this number for the next cycle \, but it
may wander from there if :p or :l are positive., f 76;
#X text 179 178 0 \, the default setting \, means "all toggles".;
#X text 802 155 :o defines a precise series of toggles for the next
cycle. Type in a list of numbers 1 to 15 here to see. :o overrides
the :h setting., f 76;
#X text 178 332 :l adds a degree of uncertainty to the toggle quantity.
The higher the number \, the more uncertain the quantity according
to Gaussian distribution \, with 0 being definite and 100 being even
distribution., f 77;
#X text 815 333 :R adds a degree of uncertainty to the toggle position.
The higher the number \, the more uncertain the position according
to Gaussian distribution \, with 0 being definite and 100 being even
distribution., f 75;
#X text 178 524 Note that :w does not affect progressions (:p) \, which
will always wrap., f 76;
#X text 813 464 :W determines whether random variations in the toggle
positions can wrap. In this case \, if wrap is on \, a toggle could
jump from position 1 to 15 \, or from 15 to 1 \, in one step \, whereas
if they are off \, this would have to to be done in 14 steps., f 75
;
#X text 178 466 :w determines whether random variations in the toggle
quantity can wrap. In this case \, if wrap is on \, the toggle quantity
could jump from 1 to 15 or from 15 to 1 in one step \, whereas if they
are off \, this would have to to be done in 14 steps., f 76;
#X text 813 524 Note that :WW does not affect progressions (:P) \,
which will always wrap., f 75;
#X obj 11 326 cnv 1 1265 1 empty empty empty 20 12 0 14 -1 -66577 0
;
#X obj 10 447 cnv 1 1267 1 empty empty empty 20 12 0 14 -1 -66577 0
;
#X obj 554 563 cnv 15 723 108 empty empty empty 20 12 0 14 -1 -66577
0;
#X obj 556 563 cnv 15 719 106 empty empty SELECT PRESETS 53 11 0 14
-241174 -1 0;
#N canvas 67 89 384 176 notes 0;
#X text 31 15 If you hold the mouse over the burst array \, it will
display the toggle selection for the next cycle.;
#X text 30 115 You can add your own presets (:L) by editing the file
'burst-presets.txt'.;
#X obj 31 84 else/openfile links/last_toggle.html -h see Context Manual
entry on the last toggle;
#X text 32 62 Note that the last toggle is not a part of the burst
and will fire regardless of the burst settings;
#X restore 13 71 pd notes;
#X obj 946 6 cnv 15 113 84 empty empty empty 20 12 0 14 -258113 -66577
0;
#X obj 949 9 cnv 15 107 77 empty empty empty 20 12 0 14 -232576 -66577
0;
#X msg 951 53 \; burst-test stop;
#X msg 951 12 \; burst-test start;
#X obj 920 566 cnv 15 43 38 empty empty empty 20 12 0 14 -66577 -66577
0;
#X obj 922 568 cnv 15 39 34 empty empty :m -3 16 0 30 -233017 -66577
0;
#X obj 970 568 tgl 15 1 empty empty AUTO ADVANCE BUMP URN 23 8 0
14 -262144 -1 -1 1 1;
#X obj 730 567 cnv 15 56 38 empty empty empty 20 12 0 14 -66577 -66577
0;
#X obj 732 569 cnv 15 52 34 empty empty bump 2 15 0 20 -233017 -66577
0;
#X obj 795 568 bng 15 250 50 0 empty empty ADVANCE NOW 20 7 0 14 -262144
-1 -1;
#X msg 795 588 \; burst-test bump;
#X text 921 625 :m determines whether a new toggle selection is made
at the end of every cycle, f 27;
#X text 738 626 bump advances the burst selection (useful for when
auto-advance is off), f 25;
#X obj 560 567 cnv 15 43 38 empty empty empty 20 12 0 14 -66577 -66577
0;
#X obj 562 569 cnv 15 39 34 empty empty :L -3 16 0 30 -233017 -66577
0;
#X msg 642 587 :L random;
#X msg 642 607 :L linear;
#X msg 642 627 :L all;
#X obj 642 647 s burst-test;
#X obj 724 563 cnv 1 1 106 empty empty empty 20 12 0 14 -1 -66577 0
;
#X obj 914 563 cnv 1 1 106 empty empty empty 20 12 0 14 -1 -66577 0
;
#N canvas 353 151 450 300 audio 0;
#X obj 153 100 tgl 17 0 \$0on \$0no empty 17 7 0 10 -262144 -1 -1 0
1;
#X obj 105 146 receive \$0on;
#X obj 286 54 receive burst-test-;
#X obj 286 76 spigot;
#X obj 286 130 dac~;
#X msg 17 199 \; pd dsp \$1;
#X obj 141 25 scaler pentatonic major b 3;
#X obj 286 108 docfiles/glock~ 1;
#X obj 239 169 declare -lib zexy -path zexy;
#X connect 1 0 3 1;
#X connect 1 0 5 0;
#X connect 2 0 3 0;
#X connect 3 0 7 0;
#X connect 7 0 4 0;
#X connect 7 0 4 1;
#X coords 0 -1 1 1 70 17 1 100 100;
#X restore 68 71 pd audio;
#X msg 970 588 \; burst-test :m \$1;
#X text 379 13 The burst is the toggle array that fires at the end
of the Context cycle \, and the burst settings determine which toggles
fire. There are 9 commands controlling this behaviour \, described
below. Their function is best grasped by playing with them \, so it
is recommended that you try each setting it turn to get a feel for
what they do. Start the example Context and watch how the toggle selection
changes with the different settings. For clarity \, try each setting
with the others turned down., f 100;
#X obj 1095 563 cnv 1 1 106 empty empty empty 20 12 0 14 -1 -66577
0;
#X obj 1164 568 cnv 15 109 38 empty empty empty 20 12 0 14 -66577 -66577
0;
#X obj 1166 570 cnv 15 105 34 empty empty bump l/R 2 15 0 20 -233017
-66577 0;
#X text 560 609 presets are editable in 'burst-presets.txt', f 11
;
#X msg 1164 609 \; burst-test bump l;
#X msg 1164 638 \; burst-test bump R;
#X text 1100 599 reset urn for :l 101 and :R 101, f 9;
#X text 178 417 At 101 \, :l selects an 'Urn random generator \, meaning
that numbers are chosen out of a "bag". Once all numbers have been
chosen \, the urn is reset., f 76;
#X text 814 413 At 101 \, :R selects an 'Urn random generator \, meaning
that numbers are chosen out of a "bag". Once all numbers have been
chosen \, the urn is reset., f 76;
#X obj 9 563 context :X 16 :Y 3 :M 1 :c 13 :d 0.5 :i 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 1.5 :m 1 :n ' burst-test ' :x = 1 2 3 4 5 6 7 8 9 10
11 12 13 14 15 16 :z 0 :F 352 :G 44 :Z 59 :v 0 :a # _;
#X obj 1065 31 cnv 15 210 55 empty empty empty 20 12 0 14 -262144 -66577
0;
#X obj 1065 31 ctxfiles/license;
#X text 180 236 :p creates an arithmetic progression for the toggle
quantity. If :p is set to 1 \, then one more toggle will fire each
cycle. Negative :p values mean that the progression will decrease instead
of increase., f 76;
#X text 814 240 :p creates an arithmetic progression for the toggle
position. If :p is set to 1 \, then the burst selection toggle(s) will
land one place higher next cycle. Negative :P values mean that the
progression will decrease., f 75;
#X text 815 292 Note that a non-integer values for :P are a special
case (see :R below)., f 74;
#X text 178 283 Note that a non-integer values for :p are a special
case (see :l below)., f 76;
#X text 178 374 The median of the bell curve resets with each new cycle
\, giving a randomized toggle quantity a "drunken walk". If the :p
value is a non-integer then the median does not reset \, so the variations
will center around the same point., f 76;
#X text 814 372 The median of the bell curve resets with each new cycle
\, giving a randomized toggle position a "drunken walk". If the :P
value is a non-integer then the mean does not reset \, so the variations
will center around the same point., f 76;
#X obj 1069 7 declare -path ../;
#N canvas 67 89 348 300 int 0;
#X obj 100 56 inlet;
#X obj 100 78 int;
#X floatatom 100 100 5 0 0 0 - - -, f 5;
#X obj 100 119 outlet;
#X connect 0 0 1 0;
#X connect 1 0 2 0;
#X connect 2 0 3 0;
#X coords 0 -1 1 1 27 14 2 100 100;
#X restore 69 264 pd int;
#N canvas 67 89 348 300 int 0;
#X obj 100 56 inlet;
#X obj 100 78 int;
#X floatatom 100 100 5 0 0 0 - - -, f 5;
#X obj 100 119 outlet;
#X connect 0 0 1 0;
#X connect 1 0 2 0;
#X connect 2 0 3 0;
#X coords 0 -1 1 1 27 14 2 100 100;
#X restore 69 374 pd int;
#N canvas 67 89 348 300 int 0;
#X obj 100 56 inlet;
#X obj 100 78 int;
#X floatatom 100 100 5 0 0 0 - - -, f 5;
#X obj 100 119 outlet;
#X connect 0 0 1 0;
#X connect 1 0 2 0;
#X connect 2 0 3 0;
#X coords 0 -1 1 1 27 14 2 100 100;
#X restore 700 264 pd int;
#N canvas 67 89 348 300 int 0;
#X obj 100 56 inlet;
#X obj 100 78 int;
#X floatatom 100 100 5 0 0 0 - - -, f 5;
#X obj 100 119 outlet;
#X connect 0 0 1 0;
#X connect 1 0 2 0;
#X connect 2 0 3 0;
#X coords 0 -1 1 1 27 14 2 100 100;
#X restore 700 374 pd int;
#N canvas 67 89 348 300 int 0;
#X obj 100 56 inlet;
#X obj 100 78 int;
#X floatatom 100 100 5 0 0 0 - - -, f 5;
#X obj 100 119 outlet;
#X connect 0 0 1 0;
#X connect 1 0 2 0;
#X connect 2 0 3 0;
#X coords 0 -1 1 1 27 14 2 100 100;
#X restore 700 264 pd int;
#X obj 440 71 else/openfile links/burst_advanced.html -h see Context
Manual entry on advanced burst settings;
#X connect 6 0 12 0;
#X connect 13 0 14 0;
#X connect 15 0 22 0;
#X connect 16 0 98 0;
#X connect 17 0 99 0;
#X connect 18 0 101 0;
#X connect 19 0 100 0;
#X connect 20 0 21 0;
#X connect 22 0 7 0;
#X connect 61 0 77 0;
#X connect 64 0 65 0;
#X connect 70 0 73 0;
#X connect 71 0 73 0;
#X connect 72 0 73 0;
#X connect 98 0 8 0;
#X connect 99 0 9 0;
#X connect 100 0 10 0;
#X connect 101 0 11 0;

#N canvas 0 88 1247 878 10;
#X obj -928 -81 translateXYZ;
#X obj -927 -119 pix_separator;
#X obj -928 -163 pix_separator;
#X obj -927 -140 pix_texture;
#X floatatom -864 -342 5 0 0 0 - - -, f 5;
#X obj -881 -363 inlet;
#X obj -882 -294 * 1;
#X floatatom -839 -275 5 0 0 0 - - -, f 5;
#X obj -880 -317 * 1;
#X obj -874 -271 int;
#X obj -1111 -346 inlet;
#X floatatom -1112 -309 5 0 0 0 - - -, f 5;
#X obj -792 -375 inlet;
#X floatatom -639 259 3 0 1 0 - - -, f 3;
#X obj -689 286 colorRGB 0 0 0;
#X floatatom -551 274 3 0 1 0 - - -, f 3;
#X floatatom -555 245 3 0 1 0 - - -, f 3;
#X floatatom -572 231 3 0 1 0 - - -, f 3;
#X floatatom -589 213 3 0 1 0 - - -, f 3;
#X obj -537 217 r lo;
#X floatatom -619 145 5 0 0 0 - - -, f 5;
#X floatatom -655 145 5 0 0 0 - - -, f 5;
#X floatatom -692 142 5 0 0 0 - - -, f 5;
#X obj -536 161 inlet;
#X obj -526 171 inlet;
#X obj -516 181 inlet;
#X obj -641 78 inlet;
#X obj -631 88 inlet;
#X obj -621 98 inlet;
#X obj -85 370 inlet;
#X obj -494 328 outlet;
#X obj -384 -151 outlet;
#X obj -314 -165 outlet;
#X obj -471 -238 unpack f f f;
#X obj -493 -157 outlet;
#X obj -935 -367 inlet;
#X obj -86 396 * 1;
#X text 39 277 Inlets:;
#X text 42 451 Outlets:;
#X text 17 240 Arguments:;
#X text 63 251 <none>;
#X text 18 465 Outlet 1: gemlist;
#X text 15 291 Inlet 1: gemlist;
#X text 16 432 Inlet 2: gemlist;
#X text 16 390 Inlet 1: direction 0|1 : which stream is the key-source
(0=left stream \; 1 = right stream);
#X text 37 197 The 2 images have to be of the same size.;
#X text 14 76 [pix_chroma_key] does compositing using pixel by pixel
comparisons on two video streams. the comparison is based on user a
user supplied RGB or YUV pixel value and +/- range. if the pixel in
the key source lies within the range \, then it is replaced by the
corresponding pixel im the other stream. typically this is most effective
on a static background like a green/blue screen \, but can be effective
when used with other GEM objects like pix_background for live video
processing.;
#X text 15 306 Inlet 1: value <list> : list of 3 floats of the pixel-value
to key out: values are either Red/Green/Blue (in RGBA-Space) or Y(luma)/U(Cb)/V(Cr)
in YUV-Space;
#X text 16 346 Inlet 1: range <list> : list of 3 floats defining the
+/-range of the key: values are either Red/Green/Blue (in RGBA-Space)
or Y(luma)/U(Cb)/V(Cr) in YUV-Space;
#X text 37 215 RGB values are 0-1 \, YUV values are 16/255-239/255
;
#X text 82 570 Class: pix object;
#X text 40 595 Description: set the alpha values of an RGBA-pix;
#X text 32 768 It defaults to highThresh = 0 0 0 \, lowThresh = 0 0
0 \, passVal = 0 \, and otherVal = 1 This makes any black pixels totally
transparent.;
#X text 33 709 pix_alpha compares at the color component level \, so
if you wanted pixels with any red and no green or blue in them to be
set to the passVal \, make highThresh = 1 0 0 and lowThresh = 0 0 0
;
#X text 32 613 pix_alpha sets the alpha values of a pix based on a
simple thresholding. If a pixel value is between the high and low threshold
RGB values \, then the alpha component of the pixel is set to the pass
value. If the pixel value is below the low threshold or above the high
threshold \, then the pixel alpha is set to the other value.;
#X text 21 815 This obviously only works with RGBA-images;
#X obj -1129 1028 pix_invert;
#X obj -1028 1258 * 5;
#X obj -1134 1300 pix_contrast;
#X obj -1133 1331 pix_motionblur;
#X obj -1024 1331 * 0.99;
#X obj -1000 979 loadbang;
#X floatatom -993 1258 5 0 0 0 - - -, f 5;
#X floatatom -992 1291 5 0 0 0 - - -, f 5;
#X floatatom -976 1331 5 0 0 0 - - -, f 5;
#X obj -1127 994 r $A-colorInv;
#X obj -1027 1291 * 10;
#X msg -1000 1010 1;
#X msg -970 1010 0;
#X floatatom -1054 1062 5 0 0 2 R - -, f 5;
#X floatatom -1014 1062 5 0 0 2 G - -, f 5;
#X floatatom -974 1062 5 0 0 2 B - -, f 5;
#X obj -1023 1087 bondo 3;
#X obj -1023 1113 pack f f f;
#X obj -1130 1120 pix_threshold;
#X msg -1106 1092 0;
#X floatatom -1113 1059 5 0 0 0 - - -, f 5;
#X floatatom -1027 1151 5 0 0 2 R - -, f 5;
#X floatatom -987 1151 5 0 0 2 G - -, f 5;
#X floatatom -947 1151 5 0 0 2 B - -, f 5;
#X obj -996 1176 bondo 3;
#X obj -1133 1368 pix_texture;
#X floatatom 981 1006 5 0 1 1 pass - -, f 5;
#X floatatom 982 1023 5 0 1 1 other - -, f 5;
#X msg 765 1207 1 0;
#X msg 725 1207 0 1;
#X obj 759 1283 unpack f f;
#X floatatom 789 1009 5 0 0 2 R - -, f 5;
#X floatatom 829 1009 5 0 0 2 G - -, f 5;
#X floatatom 869 1009 5 0 0 2 B - -, f 5;
#X obj 819 1097 bondo 3;
#X obj 809 1123 pack f f f;
#X floatatom 790 1024 5 0 0 2 - - -, f 5;
#X floatatom 830 1025 5 0 0 2 - - -, f 5;
#X floatatom 870 1025 5 0 0 2 - - -, f 5;
#X obj 980 1113 bondo 3;
#X obj 980 1139 pack f f f;
#X obj 812 1151 prepend set;
#X obj 981 1164 prepend set;
#X obj 783 1336 pix_alpha;
#X obj 48 872 cnv 15 430 120 empty empty empty 20 12 0 14 -233017 -66577
0;
#X text 79 875 Inlets:;
#X text 1188 993 Outlets:;
#X text 96 975 Outlet 1: gemlist;
#X text 103 889 Inlet 1: gemlist;
#X text 103 902 Inlet 2: <float>: ALPHA-value if passed;
#X text 103 915 Inlet 3: <float>: ALPHA-value if not passed;
#X text 103 927 Inlet 4: <list>: high-threshold (RGB);
#X text 103 940 Inlet 4: <list>: low-threshold (RGB);
#X floatatom 745 1008 5 0 255 0 high-threshold_ - -, f 5;
#X floatatom 745 1024 5 0 255 0 low-threshold_ - -, f 5;
#X obj 785 1109 bng 15 250 50 0 empty empty empty 17 7 0 10 -262144
-1 -1;
#X obj 954 1107 bng 15 250 50 0 empty empty empty 17 7 0 10 -262144
-1 -1;
#X obj 770 1175 r lo;
#X msg 985 1207 0.169492 0.169492 0.169492;
#X msg 825 1207 1 1 1;
#X obj 850 1178 loadbang;
#X obj 724 1172 sel;
#X text 917 1020 select;
#X obj 963 1006 vradio 15 1 0 2 empty empty empty 0 -8 0 4 -262144
-1 -1 1;
#X text 916 1006 invert;
#X obj 644 958 inlet;
#X obj 694 958 inlet;
#X obj 744 958 inlet;
#X obj 794 958 inlet;
#X obj 868 950 inlet;
#X obj 918 950 inlet;
#X obj 968 950 inlet;
#X obj 1018 950 inlet;
#X obj 1068 950 inlet;
#X obj 1118 950 inlet;
#X obj 1168 950 inlet;
#X obj -847 1126 r gainR;
#X obj -747 1126 r gainV;
#X floatatom -769 -275 5 0 0 0 - - -, f 5;
#X obj -847 1036 r trshldR;
#X obj -747 1035 r trshldV;
#X obj -664 1035 r trshldB;
#X obj -667 1126 r gainB;
#X obj -929 1330 r $A-motionBlur;
#X obj -951 1291 r $A-saturation;
#X obj -950 1258 r $A-contrast;
#X obj -737 477 spigot-toggle_red;
#X obj -1113 1211 pix_gain;
#X obj -1023 1203 pack f f f;
#X obj -983 -330 gemhead 1;
#X obj -927 -30 pix_texture;
#X obj -617 328 pix_texture;
#X obj -1122 1164 pix_texture;
#X obj 783 1356 pix_texture;
#X obj -986 -100 alpha;
#X obj -928 -238 pix_film;
#X connect 0 0 146 0;
#X connect 1 0 150 0;
#X connect 2 0 3 0;
#X connect 3 0 1 0;
#X connect 4 0 8 0;
#X connect 5 0 4 0;
#X connect 6 0 7 0;
#X connect 7 0 9 0;
#X connect 8 0 6 0;
#X connect 9 0 151 1;
#X connect 10 0 11 0;
#X connect 10 0 151 0;
#X connect 12 0 6 1;
#X connect 12 0 134 0;
#X connect 13 0 14 3;
#X connect 13 0 14 2;
#X connect 13 0 14 1;
#X connect 14 0 147 0;
#X connect 15 0 14 4;
#X connect 16 0 14 3;
#X connect 17 0 14 2;
#X connect 18 0 14 1;
#X connect 19 0 16 0;
#X connect 19 0 17 0;
#X connect 19 0 18 0;
#X connect 20 0 0 3;
#X connect 21 0 0 2;
#X connect 22 0 0 1;
#X connect 23 0 18 0;
#X connect 24 0 17 0;
#X connect 25 0 16 0;
#X connect 26 0 22 0;
#X connect 27 0 21 0;
#X connect 28 0 20 0;
#X connect 29 0 36 0;
#X connect 33 0 34 0;
#X connect 33 0 6 1;
#X connect 33 1 31 0;
#X connect 33 2 32 0;
#X connect 35 0 142 1;
#X connect 36 0 15 0;
#X connect 56 0 74 0;
#X connect 57 0 58 1;
#X connect 58 0 59 0;
#X connect 59 0 81 0;
#X connect 60 0 59 1;
#X connect 61 0 68 0;
#X connect 62 0 57 0;
#X connect 63 0 66 0;
#X connect 64 0 60 0;
#X connect 65 0 56 0;
#X connect 66 0 58 2;
#X connect 67 0 56 0;
#X connect 68 0 56 0;
#X connect 69 0 72 0;
#X connect 70 0 72 1;
#X connect 71 0 72 2;
#X connect 72 0 73 0;
#X connect 72 1 73 1;
#X connect 72 2 73 2;
#X connect 73 0 74 2;
#X connect 74 0 58 0;
#X connect 75 0 74 1;
#X connect 76 0 74 1;
#X connect 77 0 80 0;
#X connect 78 0 80 1;
#X connect 79 0 80 2;
#X connect 80 0 144 0;
#X connect 80 1 144 1;
#X connect 80 2 144 2;
#X connect 81 0 142 0;
#X connect 82 0 99 1;
#X connect 83 0 99 2;
#X connect 84 0 86 0;
#X connect 85 0 86 0;
#X connect 86 0 99 1;
#X connect 86 1 99 2;
#X connect 87 0 90 0;
#X connect 87 0 111 0;
#X connect 88 0 90 1;
#X connect 88 0 111 0;
#X connect 89 0 90 2;
#X connect 89 0 111 0;
#X connect 90 0 91 0;
#X connect 90 1 91 1;
#X connect 90 2 91 2;
#X connect 91 0 97 0;
#X connect 92 0 95 0;
#X connect 92 0 112 0;
#X connect 93 0 95 1;
#X connect 93 0 112 0;
#X connect 94 0 95 2;
#X connect 94 0 112 0;
#X connect 95 0 96 0;
#X connect 95 1 96 1;
#X connect 95 2 96 2;
#X connect 96 0 98 0;
#X connect 97 0 115 0;
#X connect 98 0 114 0;
#X connect 99 0 149 0;
#X connect 109 0 87 0;
#X connect 109 0 88 0;
#X connect 109 0 89 0;
#X connect 110 0 92 0;
#X connect 110 0 93 0;
#X connect 110 0 94 0;
#X connect 111 0 115 0;
#X connect 112 0 114 0;
#X connect 113 0 84 0;
#X connect 113 0 83 0;
#X connect 114 0 99 4;
#X connect 115 0 99 3;
#X connect 116 0 115 0;
#X connect 117 0 85 0;
#X connect 117 1 84 0;
#X connect 119 0 117 0;
#X connect 121 0 109 0;
#X connect 122 0 87 0;
#X connect 123 0 88 0;
#X connect 124 0 89 0;
#X connect 125 0 110 0;
#X connect 126 0 92 0;
#X connect 127 0 93 0;
#X connect 128 0 94 0;
#X connect 129 0 119 0;
#X connect 130 0 82 0;
#X connect 131 0 83 0;
#X connect 132 0 77 0;
#X connect 133 0 78 0;
#X connect 135 0 69 0;
#X connect 136 0 70 0;
#X connect 137 0 71 0;
#X connect 138 0 79 0;
#X connect 139 0 64 0;
#X connect 140 0 63 0;
#X connect 141 0 62 0;
#X connect 142 0 30 0;
#X connect 143 0 58 0;
#X connect 144 0 143 2;
#X connect 145 0 151 0;
#X connect 146 0 14 0;
#X connect 147 0 99 0;
#X connect 148 0 58 0;
#X connect 149 0 56 0;
#X connect 150 0 0 0;
#X connect 151 0 2 0;
#X connect 151 1 33 0;
